---
title: "Thesis"
author: "Han Chenyue"
format: pdf editor: visual
---


```{r, include=FALSE}
library(knitr)
library(tidyverse)
library(ggplot2)
library(readxl)
library(dplyr)
library(tidyr)
library(janitor)
library(lubridate)
```

# ```{r}
# # Combine sheets into a single data frame
# file_path <- file_path <- "C:/Users/hn/OneDrive - University of Bath/Thesis/thesis_dataset/TTAS All data anon.xlsx"
# sheet_names <- c("Demographics", "PROMs ALL DATA", "BASMI data", "Highcost drug data")
# 
# # Perform full join
# data <- sheet_names %>%
#   map(read_excel, path = file_path) %>%
#   reduce(full_join, by = "TTAS_ID")
# 
# 
# ```

```{r}
# Load data
demographics_sheet_data <- read_excel("TTAS\ All\ data\ anon.xlsx", sheet = "Demographics")
prom_sheet_data <- read_excel("TTAS\ All\ data\ anon.xlsx", sheet = "PROMs\ ALL\ DATA")
basmi_sheet_data <- read_excel("TTAS\ All\ data\ anon.xlsx", sheet = "BASMI\ data")
drug_sheet_data <- read_excel("TTAS\ All\ data\ anon.xlsx", sheet = "Highcost\ drug\ data")

# Clean data
demographics_sheet_data <- clean_names(demographics_sheet_data)
prom_sheet_data <- clean_names(prom_sheet_data)
basmi_sheet_data <- clean_names(basmi_sheet_data)
drug_sheet_data <- clean_names(drug_sheet_data)
```

```{r}
summary(demographics_sheet_data)

```

```{r}
# Ensure that the date columns are consistent
colnames(prom_sheet_data)[colnames(prom_sheet_data) == "date"] <- "prom_datasheet_record_date"
colnames(basmi_sheet_data)[colnames(basmi_sheet_data) == "date"] <- "basmi_datasheet_record_date"
colnames(drug_sheet_data)[colnames(drug_sheet_data) == "start_date"] <- "drug_start_date"

# Convert all date columns to a consistent format
prom_sheet_data$prom_datasheet_record_date <- as.Date(prom_sheet_data$prom_datasheet_record_date, format = "%d/%m/%Y")
basmi_sheet_data$basmi_datasheet_record_date <- as.Date(basmi_sheet_data$basmi_datasheet_record_date, format = "%d/%m/%Y")
drug_sheet_data$drug_start_date <- as.Date(drug_sheet_data$drug_start_date, format = "%d/%m/%Y")
drug_sheet_data$stop_date <- as.Date(drug_sheet_data$stop_date, format = "%d/%m/%Y")

# Data Cleaning
# Demographics
# 1. Replace all unknown and blank values with NA
demographics_sheet_data <- demographics_sheet_data %>%
  mutate(across(where(is.character), ~na_if(., "Unknown"))) #%>%
  # mutate(across(where(is.character), ~na_if(., "")))
```

```{r}
# Full join the data
combined_df <- full_join(basmi_sheet_data, prom_sheet_data, 
                         by = c("ttas_id",
                                "basmi_datasheet_record_date" = "prom_datasheet_record_date"))

combined_df <- combined_df %>% arrange(ttas_id, basmi_datasheet_record_date)

combined_df <- full_join(combined_df, drug_sheet_data, 
                         by = c("ttas_id",
                                "basmi_datasheet_record_date" = "drug_start_date"))

combined_df <- combined_df %>% arrange(ttas_id, basmi_datasheet_record_date)

combined_df <- full_join(combined_df, demographics_sheet_data, by = "ttas_id")

# Rename 'basmi_datasheet_record_date' to 'date'
combined_df <- combined_df %>% rename(date = basmi_datasheet_record_date)
```

```{r}
write_csv(combined_df, "test_combined_df.csv")
write_csv(drug_sheet_data, "test_drug_sheet_data.csv")
```

```{r, warning=FALSE}
timeline_data <- combined_df %>%
  # select(ttas_id, date, basmi_score, basdai, basdfi, patient_global, back_pain_at_night, back_pain_anytime, as_qol, facit, margolis) %>% 
  select(ttas_id, date, basmi_score, basdai, basfi, as_qol) %>%
  pivot_longer(cols = c(basmi_score, basdai, basfi, as_qol),
               names_to = "Measure",
               values_to = "Score")

# Create a timeline plot
# ggplot(timeline_data, aes(x = date, y = Score, color = Measure)) +
#   geom_point() +
#   geom_line() +
#   # facet_wrap(~ ttas_id, scales = "free_y")
#   facet_wrap(~ ttas_id, ncol = 1, scales = "free_y")

output_folder <- "timeline_plots"
dir.create(output_folder, showWarnings = FALSE)

unique_ids <- unique(timeline_data$ttas_id)

for (current_id in unique_ids){
  filtered_data <- timeline_data %>% filter(ttas_id == current_id)
  filtered_drug_data <- drug_sheet_data %>% filter(ttas_id == current_id)
  
  print(head(filtered_data))
  print(head(filtered_drug_data))
  
  drug_colours <- c(
  "Remicade" = "blue", "Remsima" = "skyblue", "Cosentyx" = "orange", 
  "Humira" = "green", "Cimzia" = "purple", "Imraldi" = "red",
  "Enbrel" = "brown", "Yuflyma" = "yellow", "Benepali" = "pink",
  "Amgevita" = "cyan", "Simponi" = "magenta", "Stelara" = "darkgreen",
  "Xeljanz" = "gold", "Mabthera" = "darkblue", "Rinvoq" = "lightgreen",
  "Otezla" = "gray", "Taltz" = "lightblue", "Bimzelx" = "darkred",
  "RoActemra" = "turquoise"
)

  
  plot <- ggplot(filtered_data, aes(x = date, y = Score, colour = Measure)) +
    geom_point() +
    # geom_line() +
    geom_rect(
      data = filtered_drug_data,
      inherit.aes = FALSE,
      aes(
        xmin = drug_start_date,
        xmax = stop_date,
        fill = x3
      ),
      ymin = -Inf,
      ymax = Inf,
      alpha = 0.5
      ) +
    geom_text(
      # Add drug names labels
      data = filtered_drug_data,
      inherit.aes = FALSE,
      aes(
        x = drug_start_date + (stop_date - drug_start_date) / 2,  # Calculate midpoint
        y = Inf,
        label = x3
        ),
      ) +
    # Use a colour pallete with enough colours for all drugs
    scale_fill_manual(values = drug_colours, na.value = "gray") +
    facet_wrap(~ ttas_id, ncol = 1, scales = "free_y") +
    labs(title = paste("Timeline plot for TTAS ID:", current_id))
  
  file_name <- paste(output_folder, "/timeline_plot_", current_id, ".png")
  ggsave(file_name, plot, width = 10, height = 6, dpi = 300)
}
```